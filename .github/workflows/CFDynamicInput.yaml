name: Cloudflare Maintenance Dynamic

on:
  workflow_dispatch:
    inputs:
      Platform:
        description: 'Choose for which platform we are bringing up the maintenance page'
        required: true
        default: 'web'
        type: choice
        options:
          - web
          - mobile
      API:
        description: 'Choose whether to add or remove FIs from the maintenance'
        required: true
        default: 'add'
        type: choice
        options:
          - add
          - remove
      Domains:
        description: 'Comma-separated list of domains'
        required: true
        default: ''

jobs:

############# MOBILE ############# 

############# MOBILE MAINTENANCE ADDITION ############# 
  add-maintenance-mobile-cloudflare:
    if: ${{ inputs.API == 'add' && inputs.Platform == 'mobile' }}
    runs-on: ubuntu-latest
    outputs:
      data_mobile: ${{ steps.format-json-mobile.outputs.formatted_data_mobile }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Format domains JSON
        id: format-json-mobile
        env:
          DOMAINS: ${{ inputs.Domains }}
        run: |
          python3 <<EOF
          import json
          domains = [domain.strip() for domain in '${DOMAINS}'.split(',') if domain.strip()]
          formatted_data = [{"key": domain, "value": "true"} for domain in domains]
          with open('data-mobile.json', 'w') as f:
              json.dump(formatted_data, f, indent=2)
          EOF
          echo "formatted_data_mobile=$(jq -c . data-mobile.json)" >> $GITHUB_OUTPUT
      - name: Display formatted JSON for review
        run: |
          echo "Domains to be processed:"
          cat data-mobile.json
  apply-maintenance-mobile-cloudflare:
    environment: cf-nonprd
    if: ${{ inputs.API == 'add' && inputs.Platform == 'mobile' }}
    runs-on: ubuntu-latest
    needs: add-maintenance-mobile-cloudflare
    steps:
      - name: Update Cloudflare KV Store
        env:
          CF_AUTH_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          FORMATTED_DATA: ${{ needs.add-maintenance-mobile-cloudflare.outputs.data_mobile }}
        run: |
          curl -kv --location --request PUT 'https://api.cloudflare.com/client/v4/accounts/6deff3dcb08cded6b6a16a253c16f672/storage/kv/namespaces/2593f0624a5f4142b8361279d9ead704/bulk' \
                --header 'Content-Type: application/json' \
                --header 'Authorization: ${{ secrets.CLOUDFLARE_API_TOKEN }}' \
                --data "$FORMATTED_DATA"

          
############# MOBILE MAINTENANCE REMOVAL ############# 
    
  remove-maintenance-mobile-cloudflare:
    if: ${{ inputs.API == 'remove' && inputs.Platform == 'mobile' }}
    runs-on: ubuntu-latest
    outputs:
      mobile_data_delete: ${{ steps.format-delete-json-mobile.output.delete_data }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Format domains for deletion JSON
        id: format-delete-json-mobile
        env:
          DOMAINS: ${{ inputs.Domains }}
        run: |
          python3 <<EOF
          import json
          domains = [domain.strip() for domain in '${DOMAINS}'.split(',') if domain.strip()]
          with open('delete-data-mobile.json', 'w') as f:
              json.dump(domains, f)
          EOF
          echo "delete_data=$(jq -c . delete-data-mobile.json)" >> $GITHUB_OUTPUT
      - name: Display formatted JSON for review
        run: |
          echo "Domains to be processed:"
          cat delete-data-mobile.json
          echo "delete_data=$(cat delete-data-mobile.json)" >> $GITHUB_OUTPUT
      
  apply-maintenance-removal-mobile:
    environment: cf-nonprd
    if: ${{ inputs.API == 'remove' && inputs.Platform == 'mobile' }}
    runs-on: ubuntu-latest
    needs: remove-maintenance-mobile-cloudflare
    steps:
      - name: Update Cloudflare KV Store (Delete)
        env:
          CF_AUTH_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          DELETE_DATA: ${{ needs.remove-maintenance-mobile-cloudflare.outputs.mobile_data_delete }}
        run: |
          curl --location --request POST 'https://api.cloudflare.com/client/v4/accounts/6deff3dcb08cded6b6a16a253c16f672/storage/kv/namespaces/2593f0624a5f4142b8361279d9ead704/bulk/delete' \
          --header 'Content-Type: application/json' \
          --header 'Authorization: ${{ secrets.CLOUDFLARE_API_TOKEN }}' \
          --data "$DELETE_DATA"



###############   WEB  #############

############# WEB MAINTENANCE ADDITION ############# 


    
  add-maintenance-web-cloudflare:
    if: ${{ inputs.API == 'add' && inputs.Platform == 'web' }}
    runs-on: ubuntu-latest
    outputs:
      web_data: ${{ steps.format-json-web.outputs.formatted_data_web }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Format domains JSON
        id: format-json-web
        env:
          DOMAINS: ${{ inputs.Domains }}
        run: |
          python3 <<EOF
          import json
          domains = [domain.strip() for domain in '${DOMAINS}'.split(',') if domain.strip()]
          formatted_data = [{"key": domain, "value": "true"} for domain in domains]
          with open('data-web.json', 'w') as f:
              json.dump(formatted_data, f, indent=2)
          EOF
          echo "formatted_data_web=$(jq -c . data-web.json)" >> $GITHUB_OUTPUT
      - name: Display formatted JSON for review
        run: |
          echo "Domains to be processed:"
          cat data-web.json

  apply-maintenance-web-cloudflare:
    environment: cf-nonprd
    if: ${{ inputs.API == 'add' && inputs.Platform == 'web' }}
    runs-on: ubuntu-latest
    needs: add-maintenance-web-cloudflare
    steps:
      - name: Update Cloudflare KV Store
        env:
          CF_AUTH_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          FORMATTED_DATA: ${{ needs.add-maintenance-web-cloudflare.outputs.web_data }}
        run: |
          curl -vk --location --request PUT 'https://api.cloudflare.com/client/v4/accounts/6deff3dcb08cded6b6a16a253c16f672/storage/kv/namespaces/9845eb89c99a4edf94a01ad7a40fcf76/bulk' \
          --header 'Content-Type: application/json' \
          --header 'Authorization: ${{ secrets.CLOUDFLARE_API_TOKEN }}' \
          --data "$FORMATTED_DATA"

############# WEB MAINTENANCE REMOVAL ############# 
    
  remove-maintenance-web-cloudflare:
    if: ${{ inputs.API == 'remove' && inputs.Platform == 'web' }}
    runs-on: ubuntu-latest
    outputs:
      web_delete_data: ${{ steps.format-delete-json-web.outputs.delete_data_web }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Format domains for deletion JSON
        id: format-delete-json-web
        env:
          DOMAINS: ${{ inputs.Domains }}
        run: |
          python3 <<EOF
          import json
          domains = [domain.strip() for domain in '${DOMAINS}'.split(',') if domain.strip()]
          with open('delete-data-web.json', 'w') as f:
              json.dump(domains, f)
          EOF
          echo "delete_data_web=$(jq -c . delete-data-web.json)" >> $GITHUB_OUTPUT
      - name: Display formatted JSON for review
        run: |
          echo "Domains to be processed:"
          cat delete-data-web.json
      
  apply-maintenance-removal-web:
    environment: cf-nonprd
    if: ${{ inputs.API == 'remove' && inputs.Platform == 'web' }}
    runs-on: ubuntu-latest
    needs: remove-maintenance-web-cloudflare
    steps:
      - name: Update Cloudflare KV Store (Delete)
        env:
          CF_AUTH_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          DELETE_DATA: ${{ needs.remove-maintenance-web-cloudflare.outputs.web_delete_data }}
        run: |
          curl --location --request POST 'https://api.cloudflare.com/client/v4/accounts/6deff3dcb08cded6b6a16a253c16f672/storage/kv/namespaces/9845eb89c99a4edf94a01ad7a40fcf76/bulk/delete' \
          --header 'Content-Type: application/json' \
          --header 'Authorization: ${{ secrets.CLOUDFLARE_API_TOKEN }}' \
          --data "$DELETE_DATA"

