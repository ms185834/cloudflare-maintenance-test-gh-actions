name: Cloudflare Maintenance 2

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - closed
  workflow_dispatch:
    inputs:
      Platform:
        description: 'Choose for which platform we are bringing up the maintenance page'
        required: true
        default: 'web'
        type: choice
        options:
          - web
          - mobile
      API:
        description: 'Choose whether to add or remove FIs from the maintenance'
        required: true
        default: 'add'
        type: choice
        options:
          - enable
          - disable
jobs:
  read-data:
    runs-on: ubuntu-latest
    outputs:
        web_enable_data: ${{ steps.read-json.outputs.web_enable_data }}
        mobile_enable_data: ${{ steps.read-json.outputs.mobile_enable_data }}
        mobile_disable_data: ${{ steps.read-json.outputs.mobile_disable_data }}
        web_disable_data: ${{ steps.read-json.outputs.web_disable_data }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Read data 
      id: read-json
      run: |
        # Read mobile data
        jq -c . mobile-data.json > single-line-mobile-data.json
        json_data=$(cat single-line-mobile-data.json)
        echo "mobile_enable_data=$json_data" >> $GITHUB_OUTPUT

        #Read Web data
        jq -c . web-data.json > single-line-web-data.json
        json_data=$(cat single-line-web-data.json)
        echo "web_enable_data=$json_data" >> $GITHUB_OUTPUT

        #Read Web data remove
        jq -c . web-data-remove.json > single-line-web-data-disable.json
        json_data=$(cat single-line-web-data-disable.json)
        echo "web_disable_data=$json_data" >> $GITHUB_OUTPUT

        #Read Mobile data remove
        jq -c . mobile-data-remove.json > single-line-mobile-data-disable.json
        json_data=$(cat single-line-mobile-data-disable.json)
        echo "mobile_disable_data=$json_data" >> $GITHUB_OUTPUT

  Web-maintenance-page-cloudflare:
    if: ${{ github.event_name == 'workflow_dispatch' }} 
    runs-on: ubuntu-latest
    needs: read-data
    steps:
     - name: Log List
       run: |
        echo ${{ needs.read-data.outputs.web_enable_data }}
        echo ${{ needs.read-data.outputs.web_disable_data }}

     - name: Manually enable maintenance Page
       if: ${{inputs.Platform == 'web' && inputs.API == 'enable'}}
       run: |
        curl --location --request PUT 'https://api.cloudflare.com/client/v4/accounts/6deff3dcb08cded6b6a16a253c16f672/storage/kv/namespaces/9845eb89c99a4edf94a01ad7a40fcf76/bulk' \
        --header 'Content-Type: application/json' \
        --header 'Authorization: ${{ secrets.CLOUDFLARE_API_TOKEN }}' \
        --data '${{ needs.read-data.outputs.web_enable_data }}'
    
     - name: Manually disable maintenance Page
       if: ${{inputs.Platform == 'web' && inputs.API == 'disable'}}
       run: |
         curl --location --request POST 'https://api.cloudflare.com/client/v4/accounts/6deff3dcb08cded6b6a16a253c16f672/storage/kv/namespaces/9845eb89c99a4edf94a01ad7a40fcf76/bulk/delete' \
         --header 'Content-Type: application/json' \
         --header 'Authorization: ${{ secrets.CLOUDFLARE_API_TOKEN }}' \
         --data '${{ needs.read-data.outputs.web_disable_data }}'
    
  PR-web-maintenance-page-cloudflare:
    if: ${{ github.event_name == 'pull_request' }} 
    permissions:
        pull-requests: write
    runs-on: ubuntu-latest
    needs: read-data
    steps:
     - name: Checkout repository
       uses: actions/checkout@v4

     - name: Log List
       run: |
        echo ${{ github.event_name }}
        echo ${{ needs.read-data.outputs.web_enable_data }}
        echo ${{ needs.read-data.outputs.web_disable_data }}

     - name: Print Comment on PR
       run: |
          # Get PR number
          pr_number=${{ github.event.pull_request.number }}

          json_content="{\"body\": \"Enable Data: ${{ needs.read-data.outputs.web_enable_data }}\\nDisable Data: ${{ needs.read-data.outputs.web_disable_data }}\"}"
          
          # Using Github API
          curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Content-Type:application/json" \
          -X POST \
          --data-binary "$json_content" \
          "https://api.github.com/repos/${{ github.repository }}/issues/$pr_number/comments"


    

        

       

        

