name: Enable maintenance for all FIs
on:
  workflow_dispatch:
    inputs:
      Platform:
        description: 'Choose for which platform we are bringing up the maintenance page'
        required: true
        default: 'web'
        type: choice
        options:
          - web
          - mobile
      Toggle:
        description: 'Choose if you want to enable or disable maintenance page for all FIs '
        required: true
        default: 'enable'
        type: choice
        options:
          - enable
          - disable
env:
  FI_LIST= ${{ vars.All_FIs }}
jobs:
    update-mobile-cloudflare-data:
        if: ${{inputs.Platform == 'mobile'}}
        runs-on: ubuntu-latest
        steps:
          - name: Checkout repository
            uses: actions/checkout@v3

          - name: Format input FI list
            id: format-json
            run: | 
              python3 <<EOF
              import json
      
              # Split and clean the comma-separated domain list
              domains = [domain.strip() for domain in '${{FI_LIST}}'.split('\n') if domain.strip()]
              formatted_data = [{"key": domain, "value": "true"} for domain in domains]

              # Write formatted JSON to a file
              with open('data-mobile.json', 'w') as f:
              json.dump(formatted_data, f, indent=2)
              EOF
              echo "formatted_data=$(jq -c . data-mobile.json)" >> $GITHUB_OUTPUT

          - name: Read list of All FIs
            id: print-json
            run: |
                echo ${{steps.format-json.outputs.formatted_data}}
              
          - name: Enable maintenance page
            if: ${{ inputs.Toggle == 'enable' }}
            run: |
                curl -kv --location --request PUT 'https://api.cloudflare.com/client/v4/accounts/6deff3dcb08cded6b6a16a253c16f672/storage/kv/namespaces/2593f0624a5f4142b8361279d9ead704/bulk' \
                --header 'Content-Type: application/json' \
                --header 'Authorization: ${{ secrets.CLOUDFLARE_API_TOKEN }}' \
                --data '${{ steps.format-json.outputs.formatted_data }}'
            
            
          - name: Disable maintenance page
            if: ${{ inputs.Toggle == 'disable' }}
            run: |
                curl -kv --location --request POST 'https://api.cloudflare.com/client/v4/accounts/6deff3dcb08cded6b6a16a253c16f672/storage/kv/namespaces/2593f0624a5f4142b8361279d9ead704/bulk/delete' \
                --header 'Content-Type: application/json' \
                --header 'Authorization: ${{ secrets.CLOUDFLARE_API_TOKEN }}' 
                # --data '${{ steps.format-json.outputs.formatted_data }}'
    
    update-web-cloudflare-data:
        if: ${{inputs.Platform == 'web'}}
        runs-on: ubuntu-latest
        steps:
          - name: Checkout repository
            uses: actions/checkout@v3
          -  name: Echo input vars
             run: | 
               echo "${{inputs.Toggle}}"
          
          - name: Format input FI list
            id: format-json
            run: | 
                 python3 <<EOF
                 import json
         
                 # Split and clean the comma-separated domain list
                 domains = [domain.strip() for domain in '${{FI_LIST}}'.split('\n') if domain.strip()]
                 enable_formatted_data = [{"key": domain, "value": "true"} for domain in domains]
   
                 # Write formatted JSON to a file
                 with open('enable-data.json', 'w') as f:
                  json.dump(enable_formatted_data, f, indent=2)

                 with open('disable-data.json', 'w') as f:
                  json.dump(domains, f)
                 EOF
                 echo "formatted_data=$(jq -c . enable-data.json)" >> $GITHUB_OUTPUT
                 echo "delete_file=$(jq -c . disable-data.json)" >> $GITHUB_OUTPUT
      
          - name: Read list of All FIs
            id: print-json
            run: |
                echo ${{ steps.format-json.outputs.formatted_data }}
                echo ${{ steps.format-json.outputs.delete_file }}
          - name: Enable maintenance page
            if: ${{ inputs.Toggle == 'enable' }}
            run: |
                curl -kv --location --request PUT 'https://api.cloudflare.com/client/v4/accounts/6deff3dcb08cded6b6a16a253c16f672/storage/kv/namespaces/9845eb89c99a4edf94a01ad7a40fcf76/bulk' \
                --header 'Content-Type: application/json' \
                --header 'Authorization: ${{ secrets.CLOUDFLARE_API_TOKEN }}' \
                --data '${{ steps.format-json.outputs.formatted_data }}'
            
          - name: Disable maintenance page
            if: ${{ inputs.Toggle == 'disable' }}
            run: |
                curl -kv --location --request POST 'https://api.cloudflare.com/client/v4/accounts/6deff3dcb08cded6b6a16a253c16f672/storage/kv/namespaces/9845eb89c99a4edf94a01ad7a40fcf76/bulk/delete' \
                --header 'Content-Type: application/json' \
                --header 'Authorization: ${{ secrets.CLOUDFLARE_API_TOKEN }}' 
                --data '${{ steps.format-json.outputs.delete_file }}'
            
             